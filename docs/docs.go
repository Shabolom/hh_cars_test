// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "тут были-бы условия использования, еслибы я их мог обозначить",
        "contact": {
            "url": "https://t.me/Timuchin3",
            "email": "tima.gorenskiy@mail.ru"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/car": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Получение данных с фильтрацией по всем полям и пагинацией, данные передаются в query params.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "это поле отвечает за марку машины",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "это поле отвечает за марку машины",
                        "name": "owner_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "это поле отвечает за модель машины",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "это поле отвечает за номер машины",
                        "name": "reg_num",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "это поле отвечает за год выпуска машины",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "это поле отвечает за страницу",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "это поле отвечает за количество элементов на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Добавления новых автомобилей в формате принятия массива номеров с последующим обращением на другой сервис и получения данных об этих машинах.",
                "parameters": [
                    {
                        "description": "введите массив номеров необходимых машин",
                        "name": "ввод",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegNums"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "данные занесены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/api/car/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Получение данных получение данных по id машины для дальнейшего заполнения ручки Update для удобства пользователя.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "передайте id машины",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Car"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Изменение одного или нескольких полей по идентификатору.",
                "parameters": [
                    {
                        "description": "выберите данные которые хотите изменить",
                        "name": "ввод",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Car"
                        }
                    },
                    {
                        "type": "string",
                        "description": "укажите id машины",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "данные упешно изменены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "car"
                ],
                "summary": "Удаления по идентификатору.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "укажите id машины",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Car"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Car": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "ownerID": {
                    "type": "string"
                },
                "regNum": {
                    "type": "string"
                },
                "updateAt": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "model.Car": {
            "type": "object",
            "properties": {
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "ownerID": {
                    "type": "string"
                },
                "regMum": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "model.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "model.GetResp": {
            "type": "object",
            "properties": {
                "cars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Car"
                    }
                },
                "totalAmount": {
                    "type": "integer"
                }
            }
        },
        "model.RegNums": {
            "type": "object",
            "properties": {
                "regNums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8800",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Cars_API",
	Description:      "Это hh_cars_project с использованием свагера",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
